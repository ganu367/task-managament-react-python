{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\web project\\\\Task Management Application\\\\task-management-frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './App.css';\n// import Signup from './components/Signup';\n// import Login from './components/Login';\n\n// function App() {\n//   const [showLogin, setShowLogin] = useState(false);\n//   const [showSignup, setShowSignup] = useState(false);\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // New state for login status\n\n//   const handleLoginClick = () => {\n//     setShowLogin(!showLogin);\n//     setShowSignup(false);\n//   };\n\n//   const handleSignupClick = () => {\n//     setShowSignup(!showSignup);\n//     setShowLogin(false);\n//   };\n\n//   const handleLogout = () => {\n//     // Implement your logout logic here\n//     setIsLoggedIn(false);\n//   };\n\n//   const handleLoginSuccess = () => {\n//     // Set the login status to true upon successful login\n//     setIsLoggedIn(true);\n//     setShowLogin(false); // Close the login form\n//     setShowSignup(false); // Close the signup form\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n//         <a className=\"navbar-brand\" href=\"/\">\n//         Auto<span>t</span>ask\n//         </a>\n//         <div className=\"navbar-collapse justify-content-end\">\n//           {isLoggedIn ? (\n//             <>\n//               <p className=\"navbar-text\">Welcome</p>\n//               <button className=\"btn nav-link\" onClick={handleLogout}>\n//                 Logout\n//               </button>\n//             </>\n//           ) : (\n//             // Show login and signup buttons if not logged in\n//             <ul className=\"navbar-nav\">\n//               <li className=\"nav-item\">\n//                 <button className=\"btn nav-link\" onClick={handleLoginClick}>\n//                   Login\n//                 </button>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <button className=\"btn nav-link\" onClick={handleSignupClick}>\n//                   Sign Up\n//                 </button>\n//               </li>\n//             </ul>\n//           )}\n//         </div>\n//       </nav>\n\n//       <section className=\"container hero-section mt-4\">\n//         {isLoggedIn ? ( // Show welcome message if logged in\n//           <>\n//             <h1>Welcome to Task Management</h1>\n//             {/* Add content for logged-in users here */}\n//           </>\n//         ) : (\n//           // Render the Login and Signup components conditionally\n//           <>\n//             {!showLogin && !showSignup && (\n//               <>\n//                 <h1>Welcome to Task Management</h1>\n//                 <button className=\"btn btn-primary mt-3\">Get Started</button>\n//               </>\n//             )}\n//             {showLogin && <Login onLoginSuccess={handleLoginSuccess} />}\n//             {showSignup && <Signup />}\n//           </>\n//         )}\n//       </section>\n\n//       <footer className=\"mt-5 text-center\">\n//         <p>&copy; 2023 Developed by Ganesh Mane</p>\n//       </footer>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Signup from './components/Signup';\nimport Login from './components/Login';\nimport ShowTasks from './components/Showtasks';\nimport Navbar from './components/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showLogin, setShowLogin] = useState(false);\n  const [showSignup, setShowSignup] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // New state for login status\n\n  const handleLoginClick = () => {\n    setShowLogin(!showLogin);\n    setShowSignup(false);\n  };\n  const handleSignupClick = () => {\n    setShowSignup(!showSignup);\n    setShowLogin(false);\n  };\n  const handleLogout = () => {\n    // Implement your logout logic here\n    setIsLoggedIn(false);\n  };\n  const handleLoginSuccess = () => {\n    // Set the login status to true upon successful login\n    setIsLoggedIn(true);\n    setShowLogin(false); // Close the login form\n    setShowSignup(false); // Close the signup form\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      handleLoginClick: true,\n      handleSignupClick: true,\n      handleLogout: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container hero-section mt-4\",\n      children: isLoggedIn ?\n      /*#__PURE__*/\n      // Show welcome message if logged in\n      _jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome to Task Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) :\n      /*#__PURE__*/\n      // Render the Login and Signup components conditionally\n      _jsxDEV(_Fragment, {\n        children: [!showLogin && !showSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Welcome to Task Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mt-3\",\n            children: \"Get Started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), showLogin && /*#__PURE__*/_jsxDEV(Login, {\n          onLoginSuccess: handleLoginSuccess\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 27\n        }, this), showSignup && /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"mt-5 text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2023 Developed by Ganesh Mane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4QmnPL02dg8/Fhq4bdQVoeEFmyo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Signup","Login","ShowTasks","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","showLogin","setShowLogin","showSignup","setShowSignup","isLoggedIn","setIsLoggedIn","handleLoginClick","handleSignupClick","handleLogout","handleLoginSuccess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/web project/Task Management Application/task-management-frontend/src/App.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './App.css';\r\n// import Signup from './components/Signup';\r\n// import Login from './components/Login';\r\n\r\n// function App() {\r\n//   const [showLogin, setShowLogin] = useState(false);\r\n//   const [showSignup, setShowSignup] = useState(false);\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // New state for login status\r\n\r\n//   const handleLoginClick = () => {\r\n//     setShowLogin(!showLogin);\r\n//     setShowSignup(false);\r\n//   };\r\n\r\n//   const handleSignupClick = () => {\r\n//     setShowSignup(!showSignup);\r\n//     setShowLogin(false);\r\n//   };\r\n\r\n//   const handleLogout = () => {\r\n//     // Implement your logout logic here\r\n//     setIsLoggedIn(false);\r\n//   };\r\n\r\n//   const handleLoginSuccess = () => {\r\n//     // Set the login status to true upon successful login\r\n//     setIsLoggedIn(true);\r\n//     setShowLogin(false); // Close the login form\r\n//     setShowSignup(false); // Close the signup form\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n//         <a className=\"navbar-brand\" href=\"/\">\r\n//         Auto<span>t</span>ask\r\n//         </a>\r\n//         <div className=\"navbar-collapse justify-content-end\">\r\n//           {isLoggedIn ? (\r\n//             <>\r\n//               <p className=\"navbar-text\">Welcome</p>\r\n//               <button className=\"btn nav-link\" onClick={handleLogout}>\r\n//                 Logout\r\n//               </button>\r\n//             </>\r\n//           ) : (\r\n//             // Show login and signup buttons if not logged in\r\n//             <ul className=\"navbar-nav\">\r\n//               <li className=\"nav-item\">\r\n//                 <button className=\"btn nav-link\" onClick={handleLoginClick}>\r\n//                   Login\r\n//                 </button>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <button className=\"btn nav-link\" onClick={handleSignupClick}>\r\n//                   Sign Up\r\n//                 </button>\r\n//               </li>\r\n//             </ul>\r\n//           )}\r\n//         </div>\r\n//       </nav>\r\n\r\n//       <section className=\"container hero-section mt-4\">\r\n//         {isLoggedIn ? ( // Show welcome message if logged in\r\n//           <>\r\n//             <h1>Welcome to Task Management</h1>\r\n//             {/* Add content for logged-in users here */}\r\n//           </>\r\n//         ) : (\r\n//           // Render the Login and Signup components conditionally\r\n//           <>\r\n//             {!showLogin && !showSignup && (\r\n//               <>\r\n//                 <h1>Welcome to Task Management</h1>\r\n//                 <button className=\"btn btn-primary mt-3\">Get Started</button>\r\n//               </>\r\n//             )}\r\n//             {showLogin && <Login onLoginSuccess={handleLoginSuccess} />}\r\n//             {showSignup && <Signup />}\r\n//           </>\r\n//         )}\r\n//       </section>\r\n\r\n//       <footer className=\"mt-5 text-center\">\r\n//         <p>&copy; 2023 Developed by Ganesh Mane</p>\r\n//       </footer>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport Signup from './components/Signup';\r\nimport Login from './components/Login';\r\nimport ShowTasks from './components/Showtasks';\r\nimport Navbar from './components/Navbar';\r\n\r\nfunction App() {\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [showSignup, setShowSignup] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // New state for login status\r\n\r\n  const handleLoginClick = () => {\r\n    setShowLogin(!showLogin);\r\n    setShowSignup(false);\r\n  };\r\n\r\n  const handleSignupClick = () => {\r\n    setShowSignup(!showSignup);\r\n    setShowLogin(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Implement your logout logic here\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const handleLoginSuccess = () => {\r\n    // Set the login status to true upon successful login\r\n    setIsLoggedIn(true);\r\n    setShowLogin(false); // Close the login form\r\n    setShowSignup(false); // Close the signup form\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n     <Navbar handleLoginClick handleSignupClick handleLogout/>\r\n\r\n      <section className=\"container hero-section mt-4\">\r\n        {isLoggedIn ? ( // Show welcome message if logged in\r\n          <>\r\n            <h1>Welcome to Task Management</h1>\r\n            {/* Add content for logged-in users here */}\r\n          </>\r\n        ) : (\r\n          // Render the Login and Signup components conditionally\r\n          <>\r\n            {!showLogin && !showSignup && (\r\n              <>\r\n                <h1>Welcome to Task Management</h1>\r\n                <button className=\"btn btn-primary mt-3\">Get Started</button>\r\n              </>\r\n            )}\r\n            {showLogin && <Login onLoginSuccess={handleLoginSuccess} />}\r\n            {showSignup && <Signup />}\r\n          </>\r\n        )}\r\n      </section>\r\n\r\n      <footer className=\"mt-5 text-center\">\r\n        <p>&copy; 2023 Developed by Ganesh Mane</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,YAAY,CAAC,CAACD,SAAS,CAAC;IACxBG,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9BJ,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1BD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAH,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACAJ,aAAa,CAAC,IAAI,CAAC;IACnBJ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACrBE,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;EACxB,CAAC;EAED,oBACER,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnBhB,OAAA,CAACF,MAAM;MAACa,gBAAgB;MAACC,iBAAiB;MAACC,YAAY;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAExDpB,OAAA;MAASe,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAC7CP,UAAU;MAAA;MAAK;MACdT,OAAA,CAAAE,SAAA;QAAAc,QAAA,eACEhB,OAAA;UAAAgB,QAAA,EAAI;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC,gBAEnC,CAAC;MAAA;MAEH;MACApB,OAAA,CAAAE,SAAA;QAAAc,QAAA,GACG,CAACX,SAAS,IAAI,CAACE,UAAU,iBACxBP,OAAA,CAAAE,SAAA;UAAAc,QAAA,gBACEhB,OAAA;YAAAgB,QAAA,EAAI;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnCpB,OAAA;YAAQe,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eAC7D,CACH,EACAf,SAAS,iBAAIL,OAAA,CAACJ,KAAK;UAACyB,cAAc,EAAEP;QAAmB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC1Db,UAAU,iBAAIP,OAAA,CAACL,MAAM;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACzB;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eAEVpB,OAAA;MAAQe,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAClChB,OAAA;QAAAgB,QAAA,EAAG;MAAoC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CAzDQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
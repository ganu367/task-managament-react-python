{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\web project\\\\Task Management Application\\\\task-management-frontend\\\\src\\\\components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../App.css\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [showLogin, setShowLogin] = useState(false);\n  const [showSignup, setShowSignup] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // New state for login status\n\n  const handleLoginClick = () => {\n    setShowLogin(!showLogin);\n    setShowSignup(false);\n  };\n  const handleSignupClick = () => {\n    setShowSignup(!showSignup);\n    setShowLogin(false);\n  };\n  const handleLogout = () => {\n    // Implement your logout logic here\n    setIsLoggedIn(false);\n  };\n  const handleLoginSuccess = () => {\n    // Set the login status to true upon successful login\n    setIsLoggedIn(true);\n    setShowLogin(false); // Close the login form\n    setShowSignup(false); // Close the signup form\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light bg-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"/\",\n        children: [\"Auto\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"t\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), \"ask\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-collapse justify-content-end\",\n        children: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"navbar-text\",\n            children: \"Welcome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn nav-link\",\n            onClick: handleLogout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Show login and signup buttons if not logged in\n        _jsxDEV(\"ul\", {\n          className: \"navbar-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn nav-link\",\n              onClick: handleLoginClick,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn nav-link\",\n              onClick: handleSignupClick,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Navbar, \"4QmnPL02dg8/Fhq4bdQVoeEFmyo=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Signup","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","showLogin","setShowLogin","showSignup","setShowSignup","isLoggedIn","setIsLoggedIn","handleLoginClick","handleSignupClick","handleLogout","handleLoginSuccess","children","className","href","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/web project/Task Management Application/task-management-frontend/src/components/Navbar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../App.css\"\r\nimport Signup from \"./components/Signup\";\r\nimport Login from \"./components/Login\";\r\n\r\nconst Navbar  = () =>{\r\n    const [showLogin, setShowLogin] = useState(false);\r\n  const [showSignup, setShowSignup] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // New state for login status\r\n\r\n  const handleLoginClick = () => {\r\n    setShowLogin(!showLogin);\r\n    setShowSignup(false);\r\n  };\r\n\r\n  const handleSignupClick = () => {\r\n    setShowSignup(!showSignup);\r\n    setShowLogin(false);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Implement your logout logic here\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  const handleLoginSuccess = () => {\r\n    // Set the login status to true upon successful login\r\n    setIsLoggedIn(true);\r\n    setShowLogin(false); // Close the login form\r\n    setShowSignup(false); // Close the signup form\r\n  };\r\n\r\n\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n        Auto<span>t</span>ask\r\n        </a>\r\n        <div className=\"navbar-collapse justify-content-end\">\r\n          {isLoggedIn ? (\r\n            <>\r\n              <p className=\"navbar-text\">Welcome</p>\r\n              <button className=\"btn nav-link\" onClick={handleLogout}>\r\n                Logout\r\n              </button>\r\n            </>\r\n          ) : (\r\n            // Show login and signup buttons if not logged in\r\n            <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                <button className=\"btn nav-link\" onClick={handleLoginClick}>\r\n                  Login\r\n                </button>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <button className=\"btn nav-link\" onClick={handleSignupClick}>\r\n                  Sign Up\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\web project\\\\Task Management Application\\\\task-management-frontend\\\\src\\\\components\\\\Section.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import \"./Section.css\"\n// const Section = () => {\n//   return (\n//     <section className=\"container hero-section mt-4\">\n//       <h1>Welcome to Task Management</h1>\n//       <button className=\"btn btn-primary mt-3\">Add your Task</button>\n//     </section>\n//   );\n// };\n\n// export default Section;\nimport React, { useState } from \"react\";\nimport \"./Section.css\";\nimport { Button } from 'react-bootstrap';\nimport Addtask from \"./Addtask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Section = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const handleAddTask = newTask => {\n    // Implement your logic to handle the new task (e.g., add it to the state)\n    console.log('New Task:', newTask);\n  };\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container hero-section mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-primary mt-3\",\n      onClick: handleShowModal,\n      children: \"Add your Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Addtask, {\n      show: showModal,\n      handleClose: handleCloseModal,\n      handleAddTask: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Section, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c = Section;\nexport default Section;\nvar _c;\n$RefreshReg$(_c, \"Section\");","map":{"version":3,"names":["React","useState","Button","Addtask","jsxDEV","_jsxDEV","Section","_s","showModal","setShowModal","handleAddTask","newTask","console","log","handleShowModal","handleCloseModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","show","handleClose","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/web project/Task Management Application/task-management-frontend/src/components/Section.jsx"],"sourcesContent":["// import React from \"react\";\r\n// import \"./Section.css\"\r\n// const Section = () => {\r\n//   return (\r\n//     <section className=\"container hero-section mt-4\">\r\n//       <h1>Welcome to Task Management</h1>\r\n//       <button className=\"btn btn-primary mt-3\">Add your Task</button>\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default Section;\r\nimport React, { useState } from \"react\";\r\nimport \"./Section.css\";\r\nimport { Button } from 'react-bootstrap';\r\nimport Addtask from \"./Addtask\";\r\n\r\nconst Section = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleAddTask = (newTask) => {\r\n    // Implement your logic to handle the new task (e.g., add it to the state)\r\n    console.log('New Task:', newTask);\r\n  };\r\n\r\n  const handleShowModal = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  return (\r\n    <section className=\"container hero-section mt-4\">\r\n      <h1>Welcome to Task Management</h1>\r\n      <Button className=\"btn btn-primary mt-3\" onClick={handleShowModal}>\r\n        Add your Task\r\n      </Button>\r\n      <Addtask show={showModal} handleClose={handleCloseModal} handleAddTask={handleAddTask} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AACtB,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,aAAa,GAAIC,OAAO,IAAK;IACjC;IACAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,OAAO,CAAC;EACnC,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5BL,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7BN,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEJ,OAAA;IAASW,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC9CZ,OAAA;MAAAY,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnChB,OAAA,CAACH,MAAM;MAACc,SAAS,EAAC,sBAAsB;MAACM,OAAO,EAAER,eAAgB;MAAAG,QAAA,EAAC;IAEnE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACThB,OAAA,CAACF,OAAO;MAACoB,IAAI,EAAEf,SAAU;MAACgB,WAAW,EAAET,gBAAiB;MAACL,aAAa,EAAEA;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEd,CAAC;AAACd,EAAA,CAzBID,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AA2Bb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}